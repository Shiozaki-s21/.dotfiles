#####################################################################
# Edit util
#####################################################################
[[plugins]]
repo = 'Shougo/unite.vim'
if = "!has('nvim')"
on_cmd = 'Unite'
depends = ['neomru.vim']
hook_source = 'source ~/.vim/rc/plugins/unite.rc.vim'
hook_add = '''
    " Prefix key
    nnoremap [unite] <Nop>
    nmap <Space>u [unite]

    " Keymap
    " Current direcotry files
    nnoremap <silent> [unite]<C-p> :<C-u>Unite<Space>file_rec/async:!<CR>
    " Buffer files
    nnoremap <silent> [unite]<C-b> :<C-u>Unite buffer<CR>
    " Grep files
    nnoremap <silent> [unite]<C-g> :<C-u>Unite<Space>grep -buffer-name=search -auto-preview -no-quit -no-empty -resume<CR>
    " Recent files
    nnoremap <silent> [unite]<C-r> :<C-u>Unite file_mru buffer<CR>
    " Yank history
    nnoremap <silent> [unite]<C-y> :<C-u>Unite history/yank<CR>
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = "!has('nvim')"
on_i = 1
hook_source = '''
    let g:neocomplete#enable_at_startup = 1
    source ~/.vim/rc/plugins/neocomplete.rc.vim
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = ['<Plug>(EasyAlign)']
hook_add = '''
    vmap <Enter> <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'haya14busa/vim-asterisk'
on_map = [
    '<Plug>(asterisk-z*)',
    '<Plug>(asterisk-z#)',
    '<Plug>(asterisk-gz*)',
    '<Plug>(asterisk-gz#)',
]
hook_add = '''
    map *  <Plug>(asterisk-z*)
    map #  <Plug>(asterisk-z#)
    map g* <Plug>(asterisk-gz*)
    map g# <Plug>(asterisk-gz#)
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
on_i = 1
hook_add = '''
    nmap s <Nop>
    xmap s <Nop>
'''

#####################################################################
# Programing util
#####################################################################
# [[plugins]]
# repo = 'Shougo/neosnippet-snippets'
#
# [[plugins]]
# repo = 'Shougo/neosnippet.vim'
# depends = ['neosnippet-snippets']

[[plugins]]
repo = 'tyru/caw.vim'
on_map = ['<Plug>(caw:hatpos:toggle)', '<Plug>(caw:zeropos:toggle)']
hook_add = '''
    " Add comment to beginning line(consider whitespace)
    nmap <Leader>c <Plug>(caw:hatpos:toggle)
    vmap <Leader>c <Plug>(caw:hatpos:toggle)
    " Add comment to beginning line(ignore whitespace)
    nmap <Leader>, <Plug>(caw:zeropos:toggle)
    vmap <Leader>, <Plug>(caw:zeropos:toggle)
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
depends = ['vimproc.vim']
on_ft = ['python']
hook_source = '''
  source ~/.vim/rc/plugins/vimquickrun.rc.vim
'''

[[plugins]]
repo = 'w0rp/ale'
on_ft = ['go', 'python', 'javascript', 'html', 'css', 'markdown', 'make']
hook_source = '''
    source ~/.vim/rc/plugins/ale.rc.vim
'''

[[plugins]]
repo = 'jsfaint/gen_tags.vim'
on_ft = ['python']
hook_source = '''
    let g:gen_tags#ctags_auto_gen = 1
    let g:gen_tags#gtags_auto_gen = 0
'''

# [[plugins]]
# repo = 'thinca/vim-qfreplace'
# on_ft = ['python']

# [[plugins]]
# repo = 'lighttiger2505/gtags.vim'
# on_cmd = ['Gtags']
# on_ft = ['python']
# hook_source = '''
#     let g:Gtags_Auto_Map = 0
#     let g:Gtags_OpenQuickfixWindow = 1
# 
#     " Show definetion of function cousor word on quickfix
#     nnoremap <silent><Leader>k :<C-u>exe("Gtags ".expand('<cword>'))<CR>
#     " Show reference of cousor word on quickfix
#     nnoremap <silent><Leader>s :<C-u>exe("Gtags -r ".expand('<cword>'))<CR>
# '''

[[plugins]]
repo = 'janko-m/vim-test'
depends = ['vim-dispatch']
hook_source = '''
    let g:test#strategy = 'dispatch'
'''

[[plugins]]
repo = 'tpope/vim-dispatch'

[[plugins]]
repo = 'thinca/vim-ref'
on_map = ['<Plug>(ref-keyword)']
hook_add = '''
    nmap <Leader>k <Plug>(ref-keyword)
'''
hook_source = '''
    " Ref view setting
    autocmd FileType ref call s:initialize_ref_viewer()
    function! s:initialize_ref_viewer()
        nnoremap <buffer> q <C-w>c
        setlocal nonumber
    endfunction
'''

[[plugins]]
repo = 'majutsushi/tagbar'
on_cmd = ['TagbarToggle']
hook_add = '''
    nmap <Space>t :TagbarToggle<CR>
'''

[[plugins]]
repo = 'tyru/caw.vim'
on_map = ['<Plug>(caw:hatpos:toggle)', '<Plug>(caw:zeropos:toggle)']
hook_add = '''
    " Add comment to beginning line(consider whitespace)
    nmap <Leader>c <Plug>(caw:hatpos:toggle)
    vmap <Leader>c <Plug>(caw:hatpos:toggle)
    " Add comment to beginning line(ignore whitespace)
    nmap <Leader>, <Plug>(caw:zeropos:toggle)
    vmap <Leader>, <Plug>(caw:zeropos:toggle)
'''

repo = 'Shougo/neco-vim'
on_ft = ['vim']

#####################################################################
# Other Util
#####################################################################
[[plugins]]
repo = 'kannokanno/previm'
depends = ['open-browser.vim']
on_ft = ['markdown']

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ['NERDTreeToggle']
depends = ['nerdtree-git-plugin']
hook_add = '''
    let NERDTreeShowHidden=1
    let NERDTreeIgnore=['\.pyc$']
    nnoremap <Space>f :<C-u>NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
depends = ['vim-fugitive']

[[plugins]]
repo = 'tpope/vim-fugitive'
on_cmd = ['Git', 'Gstatus', 'Gdiff', 'Gblame', 'Glog']
hook_add = '''
    nmap [figitive] <Nop>
    map <Leader>g [figitive]
    nmap <silent> [figitive]s :<C-u>Gstatus<CR>
    nmap <silent> [figitive]d :<C-u>Gdiff<CR>
    nmap <silent> [figitive]b :<C-u>Gblame<CR>
    nmap <silent> [figitive]l :<C-u>Glog<CR>
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = ['<Plug>(openbrowser-smart-search)']
hook_add = '''
    let g:netrw_nogx = 1 " disable netrw's gx mapping.
    nmap <Leader>o <Plug>(openbrowser-smart-search)
    vmap <Leader>o <Plug>(openbrowser-smart-search)
'''

#####################################################################
# Syntax
#####################################################################
[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = ['markdown']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'IN3D/vim-raml'
on_ft = ['raml']

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_source = '''
    let g:vim_json_syntax_conceal = 0
    let g:indentLine_noConcealCursor = ""
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_ft = ['markdown', 'toml', 'help']

[[plugins]]
repo = 'Shougo/context_filetype.vim'
